const next=t=>{const[e,r,n,o,s]=t;if(e>=(o?n:s).length)return{done:!0};const a=o?e:s[e];let l;if("k"===r)l=a;else{const t=n[a];"v"===r?l=t:"kv"===r&&(l=[a,t])}return t[0]++,{value:l,done:!1}},getIterator=(t,e,r)=>({[Symbol.iterator]:()=>{let n=[0,t,e,r,r?null:Object.keys(e)];return{next:()=>next(n)}}});export const iterate=t=>{const e=Array.isArray(t),r=getIterator("kv",t,e);return r.keys=()=>getIterator("k",t,e),r.values=()=>getIterator("v",t,e),r};
